{"version":3,"sources":["App.js","index.js"],"names":["styles","StyleSheet","create","app","marginHorizontal","maxWidth","logo","height","header","padding","title","fontWeight","fontSize","marginVertical","textAlign","text","lineHeight","link","color","code","fontFamily","buttonStyles","button","backgroundColor","borderRadius","textTransform","App","_useState","useState","_useState2","_slicedToArray","coloredCircles","setColoredCircles","_useState3","_useState4","colouredchangedball","ball","filter","item","console","log","length","React","createElement","View","style","Text","Pressable","onPress","concat","_toConsumableArray","map","index","key","JSON","stringify","TouchableOpacity","circle","coloredCircles1","click","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"gPA+DA,IAAMA,EAASC,IAAWC,OAAO,CAC/BC,IAAK,CACHC,iBAAkB,OAClBC,SAAU,KAEZC,KAAM,CACJC,OAAQ,IAEVC,OAAQ,CACNC,QAAS,IAEXC,MAAO,CACLC,WAAY,OACZC,SAAU,SACVC,eAAgB,MAChBC,UAAW,UAEbC,KAAM,CACJC,WAAY,QACZJ,SAAU,WACVC,eAAgB,MAChBC,UAAW,UAEbG,KAAM,CACJC,MAAO,WAETC,KAAM,CACJC,WAAY,0BAIVC,EAAepB,IAAWC,OAAO,CACrCoB,OAAQ,CACNC,gBAAiB,UACjBC,aAAc,GAEhBT,KAAM,CACJG,MAAO,OACPP,WAAY,MACZF,QAAS,EACTK,UAAW,SACXW,cAAe,eAIJC,EAlGf,WACE,IAAAC,EAA4CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,EAA8CL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAUpDE,GAVgBD,EAAA,GAAoBA,EAAA,GAUd,WAC1B,IAAME,EAAOL,EAAeM,QAAO,SAACC,GAAI,OAAc,IAATA,KAG7C,OADAC,QAAQC,IAAI,OAAQJ,GACbA,EAAKK,SAGd,OACEC,IAAAC,cAACC,IAAI,CAACC,MAAO7C,EAAOG,KAClBuC,IAAAC,cAACC,IAAI,CAACC,MAAO7C,EAAOQ,QAClBkC,IAAAC,cAACG,IAAI,CAACD,MAAO7C,EAAOU,OAAO,SAAOqB,EAAeU,QACjDC,IAAAC,cAACG,IAAI,CAACD,MAAO7C,EAAOU,OAAO,SAAOyB,IAGpCO,IAAAC,cAACI,IAAS,CACRC,QAAS,WAvBbhB,EAAkB,GAADiB,OAAAC,YAAKnB,GAAc,EAAE,MA0BlCc,MAAOxB,EAAaC,QAEpBoB,IAAAC,cAACG,IAAI,CAACD,MAAOxB,EAAaN,MAAM,cAC/BgB,EAAeoB,KAAI,SAACb,EAAMc,GAAK,OAC9BV,IAAAC,cAACC,IAAI,CAACS,IAAKD,GACTV,IAAAC,cAACG,IAAI,KAAEQ,KAAKC,UAAUjB,IACtBI,IAAAC,cAACa,IAAgB,CACfH,IAAKD,EACLP,MAAO,CACL7C,EAAOyD,OACP,CAAElC,gBAAiBe,EAAO,OAAS,SAErCU,QAAS,kBApCP,SAACI,GACb,IAAMM,EAAeR,YAAOnB,GAC5B2B,EAAgBN,IAAUrB,EAAeqB,GACzCpB,EAAkB0B,GAClBvB,IAgCyBwB,CAAMP,KAErBV,IAAAC,cAACG,IAAI,CAACD,MAAO7C,EAAOe,MAAOuC,KAAKC,UAAUjB,YCnDxDsB,IAAYC,kBAAkB,OAAO,kBAAMnC,KAE3CkC,IAAYE,eAAe,MAAO,CAChCC,QAASC,SAASC,eAAe,Y","file":"static/js/main.f75cb67e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Image,\n  Pressable,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity\n} from \"react-native\";\n\nfunction App() {\n  const [coloredCircles, setColoredCircles] = useState([]);\n  const [coloredCircles1, setColoredCircles1] = useState([]);\n  const addcircle = () => {\n    setColoredCircles([...coloredCircles, false]);\n  };\n  const click = (index) => {\n    const coloredCircles1 = [...coloredCircles];\n    coloredCircles1[index] = !coloredCircles[index];\n    setColoredCircles(coloredCircles1);\n    colouredchangedball();\n  };\n  const colouredchangedball = () => {\n    const ball = coloredCircles.filter((item) => item === true);\n\n    console.log(\"ball\", ball);\n    return ball.length;\n  };\n\n  return (\n    <View style={styles.app}>\n      <View style={styles.header}>\n        <Text style={styles.title}>total:{coloredCircles.length}</Text>\n        <Text style={styles.title}>total:{colouredchangedball}</Text>\n      </View>\n\n      <Pressable\n        onPress={() => {\n          addcircle();\n        }}\n        style={buttonStyles.button}\n      >\n        <Text style={buttonStyles.text}>add button</Text>\n        {coloredCircles.map((item, index) => (\n          <View key={index}>\n            <Text>{JSON.stringify(item)}</Text>\n            <TouchableOpacity\n              key={index}\n              style={[\n                styles.circle,\n                { backgroundColor: item ? \"blue\" : \"gray\" }\n              ]}\n              onPress={() => click(index)}\n            >\n              <Text style={styles.text}>{JSON.stringify(item)}</Text>\n            </TouchableOpacity>\n          </View>\n        ))}\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  app: {\n    marginHorizontal: \"auto\",\n    maxWidth: 500\n  },\n  logo: {\n    height: 80\n  },\n  header: {\n    padding: 20\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginVertical: \"1em\",\n    textAlign: \"center\"\n  },\n  text: {\n    lineHeight: \"1.5em\",\n    fontSize: \"1.125rem\",\n    marginVertical: \"1em\",\n    textAlign: \"center\"\n  },\n  link: {\n    color: \"#1B95E0\"\n  },\n  code: {\n    fontFamily: \"monospace, monospace\"\n  }\n});\n\nconst buttonStyles = StyleSheet.create({\n  button: {\n    backgroundColor: \"#2196F3\",\n    borderRadius: 2\n  },\n  text: {\n    color: \"#fff\",\n    fontWeight: \"500\",\n    padding: 8,\n    textAlign: \"center\",\n    textTransform: \"uppercase\"\n  }\n});\n\nexport default App;\n","import { AppRegistry } from \"react-native\";\nimport App from \"./App\";\n\nAppRegistry.registerComponent(\"App\", () => App);\n\nAppRegistry.runApplication(\"App\", {\n  rootTag: document.getElementById(\"root\")\n});\n"],"sourceRoot":""}